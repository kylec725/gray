// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.3
// source: graytorrent.proto

package rpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Torrent_State int32

const (
	Torrent_DOWNLOADING Torrent_State = 0
	Torrent_STOPPED     Torrent_State = 1
	Torrent_STALLED     Torrent_State = 2
	Torrent_SEEDING     Torrent_State = 3
	Torrent_COMPLETE    Torrent_State = 4
)

// Enum value maps for Torrent_State.
var (
	Torrent_State_name = map[int32]string{
		0: "DOWNLOADING",
		1: "STOPPED",
		2: "STALLED",
		3: "SEEDING",
		4: "COMPLETE",
	}
	Torrent_State_value = map[string]int32{
		"DOWNLOADING": 0,
		"STOPPED":     1,
		"STALLED":     2,
		"SEEDING":     3,
		"COMPLETE":    4,
	}
)

func (x Torrent_State) Enum() *Torrent_State {
	p := new(Torrent_State)
	*p = x
	return p
}

func (x Torrent_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Torrent_State) Descriptor() protoreflect.EnumDescriptor {
	return file_graytorrent_proto_enumTypes[0].Descriptor()
}

func (Torrent_State) Type() protoreflect.EnumType {
	return &file_graytorrent_proto_enumTypes[0]
}

func (x Torrent_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Torrent_State.Descriptor instead.
func (Torrent_State) EnumDescriptor() ([]byte, []int) {
	return file_graytorrent_proto_rawDescGZIP(), []int{2, 0}
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_graytorrent_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_graytorrent_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_graytorrent_proto_rawDescGZIP(), []int{0}
}

type ListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TorrentList []*Torrent `protobuf:"bytes,1,rep,name=torrentList,proto3" json:"torrentList,omitempty"`
}

func (x *ListReply) Reset() {
	*x = ListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_graytorrent_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListReply) ProtoMessage() {}

func (x *ListReply) ProtoReflect() protoreflect.Message {
	mi := &file_graytorrent_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListReply.ProtoReflect.Descriptor instead.
func (*ListReply) Descriptor() ([]byte, []int) {
	return file_graytorrent_proto_rawDescGZIP(), []int{1}
}

func (x *ListReply) GetTorrentList() []*Torrent {
	if x != nil {
		return x.TorrentList
	}
	return nil
}

type Torrent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint32        `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string        `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	InfoHash    []byte        `protobuf:"bytes,3,opt,name=infoHash,proto3" json:"infoHash,omitempty"`
	TotalLength uint32        `protobuf:"varint,4,opt,name=totalLength,proto3" json:"totalLength,omitempty"`
	Left        uint32        `protobuf:"varint,5,opt,name=left,proto3" json:"left,omitempty"`
	DownRate    uint32        `protobuf:"varint,6,opt,name=downRate,proto3" json:"downRate,omitempty"`
	UpRate      uint32        `protobuf:"varint,7,opt,name=upRate,proto3" json:"upRate,omitempty"`
	State       Torrent_State `protobuf:"varint,8,opt,name=state,proto3,enum=graytorrent.Torrent_State" json:"state,omitempty"`
}

func (x *Torrent) Reset() {
	*x = Torrent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_graytorrent_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Torrent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Torrent) ProtoMessage() {}

func (x *Torrent) ProtoReflect() protoreflect.Message {
	mi := &file_graytorrent_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Torrent.ProtoReflect.Descriptor instead.
func (*Torrent) Descriptor() ([]byte, []int) {
	return file_graytorrent_proto_rawDescGZIP(), []int{2}
}

func (x *Torrent) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Torrent) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Torrent) GetInfoHash() []byte {
	if x != nil {
		return x.InfoHash
	}
	return nil
}

func (x *Torrent) GetTotalLength() uint32 {
	if x != nil {
		return x.TotalLength
	}
	return 0
}

func (x *Torrent) GetLeft() uint32 {
	if x != nil {
		return x.Left
	}
	return 0
}

func (x *Torrent) GetDownRate() uint32 {
	if x != nil {
		return x.DownRate
	}
	return 0
}

func (x *Torrent) GetUpRate() uint32 {
	if x != nil {
		return x.UpRate
	}
	return 0
}

func (x *Torrent) GetState() Torrent_State {
	if x != nil {
		return x.State
	}
	return Torrent_DOWNLOADING
}

type TorrentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	InfoHash []byte `protobuf:"bytes,2,opt,name=infoHash,proto3" json:"infoHash,omitempty"`
}

func (x *TorrentRequest) Reset() {
	*x = TorrentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_graytorrent_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TorrentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TorrentRequest) ProtoMessage() {}

func (x *TorrentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_graytorrent_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TorrentRequest.ProtoReflect.Descriptor instead.
func (*TorrentRequest) Descriptor() ([]byte, []int) {
	return file_graytorrent_proto_rawDescGZIP(), []int{3}
}

func (x *TorrentRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TorrentRequest) GetInfoHash() []byte {
	if x != nil {
		return x.InfoHash
	}
	return nil
}

type TorrentReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	InfoHash []byte `protobuf:"bytes,3,opt,name=infoHash,proto3" json:"infoHash,omitempty"`
}

func (x *TorrentReply) Reset() {
	*x = TorrentReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_graytorrent_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TorrentReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TorrentReply) ProtoMessage() {}

func (x *TorrentReply) ProtoReflect() protoreflect.Message {
	mi := &file_graytorrent_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TorrentReply.ProtoReflect.Descriptor instead.
func (*TorrentReply) Descriptor() ([]byte, []int) {
	return file_graytorrent_proto_rawDescGZIP(), []int{4}
}

func (x *TorrentReply) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TorrentReply) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TorrentReply) GetInfoHash() []byte {
	if x != nil {
		return x.InfoHash
	}
	return nil
}

type AddRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Magnet    bool   `protobuf:"varint,2,opt,name=magnet,proto3" json:"magnet,omitempty"`
	Directory string `protobuf:"bytes,3,opt,name=directory,proto3" json:"directory,omitempty"`
}

func (x *AddRequest) Reset() {
	*x = AddRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_graytorrent_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddRequest) ProtoMessage() {}

func (x *AddRequest) ProtoReflect() protoreflect.Message {
	mi := &file_graytorrent_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddRequest.ProtoReflect.Descriptor instead.
func (*AddRequest) Descriptor() ([]byte, []int) {
	return file_graytorrent_proto_rawDescGZIP(), []int{5}
}

func (x *AddRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddRequest) GetMagnet() bool {
	if x != nil {
		return x.Magnet
	}
	return false
}

func (x *AddRequest) GetDirectory() string {
	if x != nil {
		return x.Directory
	}
	return ""
}

var File_graytorrent_proto protoreflect.FileDescriptor

var file_graytorrent_proto_rawDesc = []byte{
	0x0a, 0x11, 0x67, 0x72, 0x61, 0x79, 0x74, 0x6f, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x67, 0x72, 0x61, 0x79, 0x74, 0x6f, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x43, 0x0a, 0x09, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x36, 0x0a, 0x0b, 0x74, 0x6f, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x72,
	0x61, 0x79, 0x74, 0x6f, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x6f, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x52, 0x0b, 0x74, 0x6f, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xb4,
	0x02, 0x0a, 0x07, 0x54, 0x6f, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x69, 0x6e, 0x66, 0x6f, 0x48, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x08, 0x69, 0x6e, 0x66, 0x6f, 0x48, 0x61, 0x73, 0x68, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04,
	0x6c, 0x65, 0x66, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x6c, 0x65, 0x66, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x64, 0x6f, 0x77, 0x6e, 0x52, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x08, 0x64, 0x6f, 0x77, 0x6e, 0x52, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x75, 0x70, 0x52, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x75, 0x70,
	0x52, 0x61, 0x74, 0x65, 0x12, 0x30, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x67, 0x72, 0x61, 0x79, 0x74, 0x6f, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x2e, 0x54, 0x6f, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x4d, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x0f, 0x0a, 0x0b, 0x44, 0x4f, 0x57, 0x4e, 0x4c, 0x4f, 0x41, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x00,
	0x12, 0x0b, 0x0a, 0x07, 0x53, 0x54, 0x4f, 0x50, 0x50, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0b, 0x0a,
	0x07, 0x53, 0x54, 0x41, 0x4c, 0x4c, 0x45, 0x44, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x45,
	0x45, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f, 0x4d, 0x50, 0x4c,
	0x45, 0x54, 0x45, 0x10, 0x04, 0x22, 0x3c, 0x0a, 0x0e, 0x54, 0x6f, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x66, 0x6f, 0x48,
	0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x69, 0x6e, 0x66, 0x6f, 0x48,
	0x61, 0x73, 0x68, 0x22, 0x4e, 0x0a, 0x0c, 0x54, 0x6f, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x66, 0x6f, 0x48,
	0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x69, 0x6e, 0x66, 0x6f, 0x48,
	0x61, 0x73, 0x68, 0x22, 0x56, 0x0a, 0x0a, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x61, 0x67, 0x6e, 0x65, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x6d, 0x61, 0x67, 0x6e, 0x65, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x32, 0xcc, 0x02, 0x0a, 0x0e,
	0x54, 0x6f, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x34,
	0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x12, 0x2e, 0x67, 0x72, 0x61, 0x79, 0x74, 0x6f, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x16, 0x2e, 0x67, 0x72, 0x61,
	0x79, 0x74, 0x6f, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x00, 0x12, 0x3b, 0x0a, 0x03, 0x41, 0x64, 0x64, 0x12, 0x17, 0x2e, 0x67, 0x72,
	0x61, 0x79, 0x74, 0x6f, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x67, 0x72, 0x61, 0x79, 0x74, 0x6f, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x2e, 0x54, 0x6f, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x00, 0x12, 0x42, 0x0a, 0x06, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x12, 0x1b, 0x2e, 0x67, 0x72,
	0x61, 0x79, 0x74, 0x6f, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x6f, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x67, 0x72, 0x61, 0x79, 0x74,
	0x6f, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x6f, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x1b,
	0x2e, 0x67, 0x72, 0x61, 0x79, 0x74, 0x6f, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x6f, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x67, 0x72,
	0x61, 0x79, 0x74, 0x6f, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x6f, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x04, 0x53, 0x74, 0x6f, 0x70,
	0x12, 0x1b, 0x2e, 0x67, 0x72, 0x61, 0x79, 0x74, 0x6f, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x2e, 0x54,
	0x6f, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e,
	0x67, 0x72, 0x61, 0x79, 0x74, 0x6f, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x6f, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x42, 0x25, 0x5a, 0x23, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6b, 0x79, 0x6c, 0x65, 0x63, 0x37, 0x32,
	0x35, 0x2f, 0x67, 0x72, 0x61, 0x79, 0x74, 0x6f, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x2f, 0x72, 0x70,
	0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_graytorrent_proto_rawDescOnce sync.Once
	file_graytorrent_proto_rawDescData = file_graytorrent_proto_rawDesc
)

func file_graytorrent_proto_rawDescGZIP() []byte {
	file_graytorrent_proto_rawDescOnce.Do(func() {
		file_graytorrent_proto_rawDescData = protoimpl.X.CompressGZIP(file_graytorrent_proto_rawDescData)
	})
	return file_graytorrent_proto_rawDescData
}

var file_graytorrent_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_graytorrent_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_graytorrent_proto_goTypes = []interface{}{
	(Torrent_State)(0),     // 0: graytorrent.Torrent.State
	(*Empty)(nil),          // 1: graytorrent.Empty
	(*ListReply)(nil),      // 2: graytorrent.ListReply
	(*Torrent)(nil),        // 3: graytorrent.Torrent
	(*TorrentRequest)(nil), // 4: graytorrent.TorrentRequest
	(*TorrentReply)(nil),   // 5: graytorrent.TorrentReply
	(*AddRequest)(nil),     // 6: graytorrent.AddRequest
}
var file_graytorrent_proto_depIdxs = []int32{
	3, // 0: graytorrent.ListReply.torrentList:type_name -> graytorrent.Torrent
	0, // 1: graytorrent.Torrent.state:type_name -> graytorrent.Torrent.State
	1, // 2: graytorrent.TorrentService.List:input_type -> graytorrent.Empty
	6, // 3: graytorrent.TorrentService.Add:input_type -> graytorrent.AddRequest
	4, // 4: graytorrent.TorrentService.Remove:input_type -> graytorrent.TorrentRequest
	4, // 5: graytorrent.TorrentService.Start:input_type -> graytorrent.TorrentRequest
	4, // 6: graytorrent.TorrentService.Stop:input_type -> graytorrent.TorrentRequest
	2, // 7: graytorrent.TorrentService.List:output_type -> graytorrent.ListReply
	5, // 8: graytorrent.TorrentService.Add:output_type -> graytorrent.TorrentReply
	5, // 9: graytorrent.TorrentService.Remove:output_type -> graytorrent.TorrentReply
	5, // 10: graytorrent.TorrentService.Start:output_type -> graytorrent.TorrentReply
	5, // 11: graytorrent.TorrentService.Stop:output_type -> graytorrent.TorrentReply
	7, // [7:12] is the sub-list for method output_type
	2, // [2:7] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_graytorrent_proto_init() }
func file_graytorrent_proto_init() {
	if File_graytorrent_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_graytorrent_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_graytorrent_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_graytorrent_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Torrent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_graytorrent_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TorrentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_graytorrent_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TorrentReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_graytorrent_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_graytorrent_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_graytorrent_proto_goTypes,
		DependencyIndexes: file_graytorrent_proto_depIdxs,
		EnumInfos:         file_graytorrent_proto_enumTypes,
		MessageInfos:      file_graytorrent_proto_msgTypes,
	}.Build()
	File_graytorrent_proto = out.File
	file_graytorrent_proto_rawDesc = nil
	file_graytorrent_proto_goTypes = nil
	file_graytorrent_proto_depIdxs = nil
}
